name: 'Release'

permissions:
    contents: write
    actions: write

on:
    push:
        branches:
            - main

jobs:
    release:
        name: Publish
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                package:
                    - name: '@onboardjs/core'
                    - name: '@onboardjs/react'
                    - name: '@onboardjs/supabase-plugin'
                    - name: '@onboardjs/posthog-plugin'
                    - name: '@onboardjs/mixpanel-plugin'
                    - name: '@onboardjs/visualizer'

        steps:
            - name: Checkout the repository
              uses: actions/checkout@v4

            - name: Setup environment
              uses: ./.github/actions/setup
              with:
                  install: false
                  build: false

            - name: Get package path
              id: get-package-path
              run: |
                  PACKAGE_PATH=$(pnpm list --filter=${{ matrix.package.name }} --json | jq -r '.[0].path')
                  echo "path=$PACKAGE_PATH" >> "$GITHUB_OUTPUT"

            - name: Check ${{ matrix.package.name }} version and detect an update
              id: check-package-version
              uses: PostHog/check-package-version@v2.1.0
              with:
                  path: ${{ steps.get-package-path.outputs.path }}

            - name: Release package ${{ matrix.package.name }}
              uses: ./.github/actions/release
              if: steps.check-package-version.outputs.is-new-version == 'true'
              with:
                  package_path: ${{ steps.get-package-path.outputs.path }}
                  package_name: ${{ matrix.package.name }}
                  package_version: ${{ steps.check-package-version.outputs.committed-version }}
                  npm_token: ${{ secrets.NPM_TOKEN }}
                  github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Dispatch onboardjs upgrade for ${{ matrix.package.name }}
              if: matrix.package.name == 'onboardjs' && steps.check-package-version.outputs.is-new-version == 'true'
              run: |
                  curl -f -X POST \
                       -H "Accept: application/vnd.github+json" \
                       -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                       https://api.github.com/repos/Somafet/onboardjs/actions/workflows/onboardjs-upgrade.yml/dispatches \
                       -d '{
                         "ref": "main",
                         "inputs": {
                           "package_name": "${{ matrix.package.name }}",
                           "package_version": "${{ steps.check-package-version.outputs.committed-version }}"
                         }
                       }'
